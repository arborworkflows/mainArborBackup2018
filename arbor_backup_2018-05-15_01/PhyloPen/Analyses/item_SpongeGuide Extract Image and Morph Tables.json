{"_id": "59176a4e54cdbf1105584573", "_modelType": "item", "baseParentId": "58a659bc54cdbf04513b9f48", "baseParentType": "collection", "created": "2017-05-13T20:19:26.374000+00:00", "creatorId": "5744cea354cdbf1a4827d8c3", "description": "", "folderId": "58a659bc54cdbf04513b9f49", "meta": {"analysis": {"description": "", "inputs": [{"default": {"data": "6", "format": "text", "type": "string"}, "description": "how many images to include per taxon", "format": "number", "id": "maxImagesPerTaxon", "name": "maxImagesPerTaxon", "type": "number"}], "mode": "python", "name": "SpongeGuide Extract Image and Morph Tables", "outputs": [{"format": "rows", "id": "morphmat", "name": "morphmat", "type": "table"}, {"format": "rows", "id": "imagetable", "name": "imagetable", "type": "table"}], "script": "import requests\nfrom lxml import html\n\n# create empty output tables\nmorphmat = {}\nmorphmat['fields'] = ['name','Color','Morphology','Consistency','Location','Description']\n#morphmat['fields'] = ['name','Attributes','Description']\nmorphmat['rows'] = []\n\nimagetable = {}\nimagetable['fields'] = ['name','url']\nimagetable['rows'] = []\n\n# now get the list of all taxa from spongeguide\nresp = requests.get('http://spongeguide.org/ajaxtaxalist.php?&searchtype=5&taxa=')\n#print resp.text\nalltaxa = resp.json()['data']\n\n# work through the taxa, filling the morph matrix and the image table with the records\n# found by scraping the website contents\n\nfor taxon in alltaxa:\n    url = 'http://spongeguide.org/'+taxon[12]\n    page = requests.get(url)\n    tree = html.fromstring(page.content)\n    namestr = str(tree.xpath('//title/text()'))\n    genusSpecies = namestr[namestr.find(' ')+1:-3]\n    \n    morphrow = {}\n    # now extract morphology\n    morphrow['name'] = genusSpecies\n    morphrow['Description'] = taxon[16]\n    \n    # prevent species with fragments of quotes from being output\n    if (genusSpecies.find('\"') < 0):\n\n        # extract the separate attributes from the single string returned by SpongeGuide. This custom parsing is\n        # to split out the separate attributes, some records don't have entries, so we have to look for the \n        # len(entry) == 0 to avoid a run-time error.\n        attribs = taxon[18].split(',')\n        categories = ['Color','Morphology','Consistency','Location']\n        current = -1\n        att_dict = {}\n        for cat in categories:\n            att_dict[cat] = ''\n        # the time when there is no word at all or no space before the word is when the next true attribute begins\n        for word in attribs:\n            # skip past empty attribute entries\n            if len(word)==0:\n                current += 1\n            elif word[0] != ' ':\n                current += 1\n            att_dict[categories[current]]  += word + ' '\n        # copy from the dictonary into the morphology table row\n        for cat in categories:\n            morphrow[cat] = att_dict[cat]\n        \n        morphmat['rows'].append(morphrow)\n    \n    # fetch the images associated with this taxon\n        imageCount = 0\n        images = tree.xpath('//img')\n        for img in images:\n            if imageCount> maxImagesPerTaxon:\n                break;\n            srctext = img.get('src')\n            # mask off the logos and other images; pass only the main content images\n            if srctext[0:4] == 'mini':\n                imagerow = {}\n                imagerow['name'] = genusSpecies\n                url = 'http://spongeguide.org/'+srctext\n                imagerow['url'] = url\n                imagetable['rows'].append(imagerow)\n                imageCount += 1\n\n    \n    \n"}}, "name": "SpongeGuide Extract Image and Morph Tables", "size": 0, "updated": "2017-05-14T22:34:47.731000+00:00"}