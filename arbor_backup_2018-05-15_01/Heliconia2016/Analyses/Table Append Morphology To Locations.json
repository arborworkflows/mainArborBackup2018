{"description": "", "inputs": [{"format": "rows", "id": "observations", "name": "observations", "type": "table"}, {"format": "rows", "id": "morphology", "name": "morphology", "type": "table"}, {"domain": {"format": "column.names", "input": "observations"}, "format": "string", "id": "indexColumn", "name": "indexColumn", "type": "string"}], "mode": "python", "name": "Table Append Morphology To Locations", "outputs": [{"format": "rows", "id": "outTable", "name": "outTable", "type": "table"}], "script": "\n# input: observations - a list of taxon observations\n# input: morphology = a morphology table\n# input: indexColumn - an attribute name to use as an index to merge data together\n# output: outTable\n\n# Merge morphology into observation table.  \n# merge the columns together, but only output rows that are in both tables.  This analysis assumes that each table has a common matching\n# column.  The value of this column is used to join the rows between the input tables.  Observation tables may include taxa not in the morphology.\n# this method only output observations with morphology when the taxon ID was present in the morphology matrix.  \n\noutTable = {}\n\n# prepare for the output table format of table:rows        \ncolumnHeaders1 = observations['fields']\ncolumnHeaders2 = morphology['fields']\n\noutRows = []\noutColumns = []\n\n# use the first table as the master.  Iterate through all of its rows and use the value of the index \n# column to select the proper row in the second table, so the additional attributes can be merged into the output.\n\n# MOD\nfor i in range(len(observations['rows'])):\n    row = observations['rows'][i]\n    for j in range(len(morphology['rows'])):\n        if morphology['rows'][j][indexColumn] == row[indexColumn]:\n            # this row from table2 matches, so loop through its entries and add them to the output row\n            for k in morphology['rows'][j]:\n                row[k] = morphology['rows'][j][k]\n            outRows.append(row)\n\n    \n# now fix the column headers to be the union of both sets of input column headers\n\nfor i in columnHeaders1:\n    if i not in outColumns:\n        outColumns.append(i)\n\nfor i in columnHeaders2:\n    if i not in outColumns:\n        outColumns.append(i)\n        \noutTable = {'fields': outColumns,'rows':outRows}"}