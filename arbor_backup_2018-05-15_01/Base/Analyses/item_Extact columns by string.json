{"_id": "577b698a54cdbf3c14cc45f0", "_modelType": "item", "baseParentId": "577b697d54cdbf3c14cc45e1", "baseParentType": "collection", "created": "2016-07-05T08:02:18.827000+00:00", "creatorId": "5761b37954cdbf3c14cc45bc", "description": "", "folderId": "577b697e54cdbf3c14cc45e3", "meta": {"analysis": {"inputs": [{"format": "rows", "name": "datatable", "type": "table"}, {"format": "text", "name": "outfieldstring", "type": "string"}], "mode": "python", "name": "Extact columns by string", "outputs": [{"format": "rows", "name": "outtable", "type": "table"}], "script": "# this analysis expects an input table with a larger number of columns than are desired in the output table.  \n# The analysis also expects a single column input table containing the names of columns to keep in the output table. \n# This is similar to the fieldfile format for mongoDB, with one field per line....\n\n# input: datatable - data table with lots of columns (relatively speaking)\n# input: outfieldstring - single string with column names to keep\n# output: outtable - smaller data table that preserves only the named columns from the input datatable\n\n# revision history:\n# 09/02/14 CRL fixed problem with spaces in column selection string\n\ninfields = datatable['fields']\nnospacestring = outfieldstring.replace(\" \",\"\")\noutfields = nospacestring.split(',')\n\n\n# now loop through the source table and append only selected columns to the output data record\n\noutrows = []\nfor row in datatable['rows']:\n    outrow = {}\n    for field in outfields:\n        outrow[field] = row[field]\n    outrows.append(outrow)\n        \nouttable = {}\nouttable['fields'] = outfields\nouttable['rows'] = outrows\n"}}, "name": "Extact columns by string", "size": 0, "updated": "2016-07-05T08:02:19.316000+00:00"}