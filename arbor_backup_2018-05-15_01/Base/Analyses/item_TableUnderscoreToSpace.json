{"_id": "577b698b54cdbf3c14cc45fa", "_modelType": "item", "baseParentId": "577b697d54cdbf3c14cc45e1", "baseParentType": "collection", "created": "2016-07-05T08:02:19.107000+00:00", "creatorId": "5761b37954cdbf3c14cc45bc", "description": "", "folderId": "577b697e54cdbf3c14cc45e3", "meta": {"analysis": {"inputs": [{"description": "input table with underscores in species names", "format": "rows", "name": "table", "type": "table"}], "mode": "python", "name": "TableUnderscoreToSpace", "outputs": [{"description": "same as input table but name and species columns have replaced underscores", "format": "rows", "name": "tableOut", "type": "table"}], "script": "# input: table - table:rows type representing a trait matrix, with \"species\" or \"name\" as the species name\n# output: tableOut - same table with substituted names  \n\n# this routine replaces underscores in species names with spaces.  E.g.  \"heliconia_robusta\" becomes \"heliconia robusta\".\n\ncolumnNames = table['fields']\noutrows = []\n\n# go through the rows and change underscores to spaces for name and species columns.  output is accumulated in outrows\nfor i in range(len(table['rows'])):\n    row = table['rows'][i]\n    if 'name' in row.keys():\n        newname = row['name'].replace('_',' ')\n        row['name'] = newname\n    elif 'species' in row.keys():\n        newname = row['species'].replace('_',' ')\n        row['species'] = newname\n    outrows.append(row)\n\n# compose output object\ntableOut = {}\ntableOut['fields'] = columnNames\ntableOut['rows'] = outrows\n\n\n    \n        "}}, "name": "TableUnderscoreToSpace", "size": 0, "updated": "2016-07-05T08:02:19.538000+00:00"}