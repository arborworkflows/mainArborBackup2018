{"_id": "5875594554cdbf7e75d96dc3", "_modelType": "item", "baseParentId": "57b346d854cdbf74fd194480", "baseParentType": "collection", "created": "2017-01-10T21:59:33.322000+00:00", "creatorId": "575874fe54cdbf51760708f3", "description": "", "folderId": "57b346d854cdbf74fd194481", "meta": {"analysis": {"connections": [{"input": "operation", "input_step": "Filter by attribute", "name": "operation"}, {"input": "inputTable", "input_step": "Filter by attribute", "name": "inputTable"}, {"input": "columnname", "input_step": "Filter by attribute", "name": "columnname"}, {"input": "testvalue", "input_step": "Filter by attribute", "name": "testvalue"}, {"name": "outTable", "output": "outTable", "output_step": "Filter by attribute"}], "description": "", "inputs": [{"default": "[object Object]", "domain": ["GreaterThan", "LessThan", "EqualTo", "NotEqualTo"], "format": "text", "id": "operation", "name": "operation", "type": "string", "x": 102, "y": 229}, {"format": "rows", "id": "inputTable", "name": "inputTable", "type": "table", "x": 102, "y": 65}, {"default": {"data": "'awesomeness'", "format": "text"}, "domain": {"format": "column.names", "input": "inputTable"}, "format": "text", "id": "columnname", "name": "columnname", "type": "string", "x": 98, "y": 342}, {"format": "text", "id": "testvalue", "name": "testvalue", "type": "string", "x": 93, "y": 459}], "mode": "workflow", "name": "new fancy wf", "outputs": [{"format": "rows", "id": "outTable", "name": "outTable", "type": "table", "x": 923, "y": 226}], "steps": [{"girderId": "577b698a54cdbf3c14cc45f1", "modified": "2016-07-05T08:02:19.342000+00:00", "name": "Filter by attribute", "task": {"inputs": [{"format": "rows", "name": "inputTable", "type": "table"}, {"default": "[object Object]", "domain": ["GreaterThan", "LessThan", "EqualTo", "NotEqualTo"], "format": "text", "name": "operation", "type": "string"}, {"default": {"data": "'awesomeness'", "format": "text"}, "domain": {"format": "column.names", "input": "inputTable"}, "format": "text", "name": "columnname", "type": "string"}, {"format": "text", "name": "testvalue", "type": "string"}], "mode": "python", "name": "Filter by attribute", "outputs": [{"format": "rows", "name": "outTable", "type": "table"}], "script": "\n# input: inputTable - a list of rows (2D table)\n# input: operation = string: \"GreaterThan\",\"LessThan\",\"NotEqual\", \"Equal\", \"EqualTo\"\n# input: columnname = string name of columnname\n# input: testvalue - value used to compare the entry in the selected column with\n# output: outTable\n\n# find all rows in this input  that match the test criteria.\noutTable = {}\n\n# this might be a number or it might be a character string, so check\ndef is_number(s):\n    try:\n        float(s)\n        return True\n    except ValueError:\n        return False\n        \n# prepare for the output table format of table:rows        \ncolumnHeaders = inputTable['fields']\noutColumns = []\nif is_number(testvalue):\n    testnumber = float(testvalue)\n    for i in range(len(inputTable['rows'])):\n        row = inputTable['rows'][i]\n        if operation == \"GreaterThan\":\n            if row[columnname] > testnumber:\n                outColumns.append(row)\n        if operation == \"LessThan\":\n            if row[columnname] < testnumber:\n                outColumns.append(row)\n        if operation == \"NotEqual\":\n            if row[columnname] != testnumber:\n                outColumns.append(row)\n        if (operation == \"EqualTo\"):\n            if row[columnname] == testnumber:\n                outColumns.append(row)\nelse:\n    for i in range(len(inputTable['rows'])):\n        row = inputTable['rows'][i]\n        if operation == \"GreaterThan\":\n            if row[columnname] > testvalue:\n                outColumns.append(row)\n        if operation == \"LessThan\":\n            if row[columnname] < testvalue:\n                outColumns.append(row)\n        if operation == \"NotEqual\":\n            if row[columnname] != testvalue:\n                outColumns.append(row)\n        if (operation == \"EqualTo\"):\n            if row[columnname] == testvalue:\n                outColumns.append(row)\n\noutTable = {'fields': columnHeaders, 'rows': outColumns}\n\n"}, "visualization": false, "x": 501, "y": 131}]}}, "name": "new fancy wf", "size": 0, "updated": "2017-01-10T22:01:02.133000+00:00"}