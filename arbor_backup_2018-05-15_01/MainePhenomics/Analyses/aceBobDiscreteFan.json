{"description": "", "inputs": [{"format": "r.apetree", "name": "tree", "type": "tree"}, {"format": "r.dataframe", "name": "table", "type": "table"}, {"default": "island", "domain": {"format": "column.names", "input": "table"}, "format": "text", "name": "column", "type": "string"}, {"default": "discrete", "domain": ["discrete"], "format": "text", "name": "type", "type": "string"}], "mode": "r", "name": "aceBobDiscreteFan", "outputs": [{"format": "png.base64", "name": "treePlot", "type": "image"}], "script": "library(cardoonTools)\nlibrary(picante)\nlibrary(geiger)\n\ntree<-as.phylo(tree)\nrow.names(table)<-table[[1]]\ncombined<-match.phylo.data(tree, table)\n\nphy<-combined$phy\ndata<-combined$data\nphy$edge.length <- phy$edge.length + 0.000001\ntrait<-data[[column]]\ntrait<-as.factor(trait)\nres<-ace(trait,phy,type=\"discrete\")\n\nacePlot<-function(phy, trait, res, ...){\n    #cols<-rainbow(nlevels(trait))\n    #10 best for color-blind; users can edit these web colors\n    cols<-c('#a50026','#fee090','#74add1','#d73027','#313695','#f46d43','#fdae61','#e0f3f8','#abd9e9','#4575b4','#313695')\n    #the cex variables set the relative sizing - feel free to edit these\n    plot(phy, type=\"fan\", cex=0.4, label.offset=0.02, main=column)\n    tiplabels(pch=21, bg=cols[as.numeric(trait)], cex=1, lwd=0.5)\n    nodelabels(pie = res$lik.anc, piecol=cols, cex=0.2, lwd=0.2)\n    legend(\"topleft\", inset=c(.02,.02), c(levels(trait)), fill=cols, horiz=TRUE, cex=1)\n}\n\ntreePlot <- cardoonPlot(expression(acePlot(phy, trait, res)), width=1000, height=1000, res=100)\ntreePlot <- treePlot$png\n\n"}