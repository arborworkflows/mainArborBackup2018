{"_id": "58fb9b1f54cdbf552d799232", "_modelType": "item", "baseParentId": "58fad7c954cdbf552d799223", "baseParentType": "collection", "created": "2017-04-22T18:04:15.962000+00:00", "creatorId": "575874fe54cdbf51760708f3", "description": "", "folderId": "58fad7c954cdbf552d799225", "meta": {"analysis": {"description": "", "inputs": [{"format": "text", "name": "taxonName", "type": "string"}], "mode": "python", "name": "Return OpenTree Study", "outputs": [{"format": "text", "id": "rerturnedrecs", "name": "returnedrecs", "type": "string"}], "script": "#\n# Return an OpenTree Study\n#\n# description: this analysis expects a Study ID for an OpenTree study.  \n# \n# input: studyID - single study ID number\n# output: outJSON -  NexSON object that contains the entire study data\n#\n\nimport requests\nimport unicodedata\nimport json\n\noutrows = []\nstringdebug = ''\n\nreturncount = 0\n\n# ideally, this could be a parameter, but this is an exploratory module, so assume a limit and don't make the \n# user enter it every time\nmaxReturnLength = 100\n\n# build an OTL query to return the matching ottId we want to use to request taxa \npayload = {'property' :'ot:ottTaxonName','value': taxonName,'verbose':'true'}\nquerystring = 'https://api.opentreeoflife.org/v3/study/'+taxonName+'.json'\nresp = requests.get(querystring)\n\nreturnedrecs = resp.text\n#returnedStudy = json.dumps(returnedrecs)\n\n            \n     "}}, "name": "Return OpenTree Study", "size": 0, "updated": "2017-04-22T23:53:58.130000+00:00"}