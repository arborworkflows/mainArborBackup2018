{"_id": "5a882b1454cdbf077f6de412", "_modelType": "item", "baseParentId": "5a6f778d54cdbf077f6de37f", "baseParentType": "collection", "created": "2018-02-17T13:16:04.321000+00:00", "creatorId": "575874fe54cdbf51760708f3", "description": "", "folderId": "5a6f778e54cdbf077f6de381", "meta": {"analysis": {"inputs": [{"description": "first input table", "format": "rows", "name": "inTable1", "type": "table"}, {"description": "second input table", "format": "rows", "name": "inTable2", "type": "table"}, {"description": "name of attribute to use to merge table row data together", "domain": {"format": "column.names", "input": "inTable1"}, "format": "text", "name": "indexColumn", "type": "string"}], "mode": "python", "name": "TableAppendColumns", "outputs": [{"description": "table containing all input columns of either input table; indexed by columname", "format": "rows", "name": "outTable", "type": "table"}], "script": "\n# input: inTable1 - a list of rows (2D table)\n# input: inTable2 = a second list of rows\n# input: indexColumn - an attribute name to use as an index to merge data together\n# output: outTable\n\n# merge the columns together.  This analysis assumes that each table has a \n\noutTable = {}\n\n        \n# prepare for the output table format of table:rows        \ncolumnHeaders1 = inTable1['fields']\ncolumnHeaders2 = inTable2['fields']\n\noutRows = []\noutColumns = []\n\n# use the first table as the master.  Iterate through all of its rows and use the value of the index \n# column to select the proper row in the second table, so the additional attributes can be merged into the output\nfor i in range(len(inTable1['rows'])):\n    row = inTable1['rows'][i]\n    for j in range(len(inTable2['rows'])):\n        if inTable2['rows'][j][indexColumn] == row[indexColumn]:\n            # this row from table2 matches, so loop through its entries and add them to the output row\n            for k in inTable2['rows'][j]:\n                row[k] = inTable2['rows'][j][k]\n            break;\n    outRows.append(row)\n\n    \n# now fix the column headers to be the union of both sets of input column headers\n\nfor i in columnHeaders1:\n    if i not in outColumns:\n        outColumns.append(i)\n\nfor i in columnHeaders2:\n    if i not in outColumns:\n        outColumns.append(i)\n        \noutTable = {'fields': outColumns,'rows':outRows}"}}, "name": "TableAppendColumns", "size": 0, "updated": "2018-02-17T13:16:04.378000+00:00"}