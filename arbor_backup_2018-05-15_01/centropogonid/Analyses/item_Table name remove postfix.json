{"_id": "5a8830e354cdbf077f6de42a", "_modelType": "item", "baseParentId": "5a6f778d54cdbf077f6de37f", "baseParentType": "collection", "created": "2018-02-17T13:40:51.952000+00:00", "creatorId": "575874fe54cdbf51760708f3", "description": "", "folderId": "5a6f778e54cdbf077f6de381", "meta": {"analysis": {"description": "", "inputs": [{"description": "input table with underscores in species names", "format": "rows", "name": "table", "type": "table"}], "mode": "python", "name": "Table name remove postfix", "outputs": [{"description": "same as input table but name and species columns have replaced underscores", "format": "rows", "name": "tableOut", "type": "table"}], "script": "# input: table - table:rows type representing a trait matrix, with \"species\" or \"name\" as the species column header.  \n# output: tableOut - same table with substituted names  \n\n# this routine replaces underscores in species names with spaces.  E.g.  \"heliconia_robusta\" becomes \"heliconia robusta\".\n\ncolumnNames = table['fields']\noutrows = []\n\n# go through the rows and change underscores to spaces for name and species columns.  output is accumulated in outrows\nfor i in range(len(table['rows'])):\n    row = table['rows'][i]\n    if 'name' in row.keys():\n        newname = row['name'].split('_')[0]+'_'+row['name'].split('_')[1]\n        row['name'] = newname\n    elif 'species' in row.keys():\n        newname = row['species'].split('_')[0]+'_'+row['species'].split('_')[1]\n        row['species'] = newname\n    elif 'Species' in row.keys():\n        newname = row['Species'].split('_')[0]+'_'+row['Species'].split('_')[1]\n        row['Species'] = newname\n    outrows.append(row)\n\n# compose output object\ntableOut = {}\ntableOut['fields'] = columnNames\ntableOut['rows'] = outrows\n\n\n    \n        "}}, "name": "Table name remove postfix", "size": 0, "updated": "2018-02-17T13:44:26.217000+00:00"}